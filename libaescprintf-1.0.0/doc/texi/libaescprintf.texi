\input texinfo   @c -*-texinfo-*-
@c %**start of header
@setfilename libaescprintf.info
@documentencoding UTF-8
@ifinfo
@*Generated by Sphinx 1.5.3.@*
@end ifinfo
@settitle libaescprintf Documentation
@defindex ge
@paragraphindent 0
@exampleindent 4
@finalout
@dircategory Miscellaneous
@direntry
* libaescprintf: (libaescprintf.info). One line description of project.
@end direntry

@definfoenclose strong,`,'
@definfoenclose emph,`,'
@c %**end of header

@copying
@quotation
libaescprintf 1.0.0, Sep 08, 2017

Brüggemann Eddie

Copyright @copyright{} 2017, Brüggemann Eddie
@end quotation

@end copying

@titlepage
@title libaescprintf Documentation
@insertcopying
@end titlepage
@contents

@c %** start of user preamble

@c %** end of user preamble

@ifnottex
@node Top
@top libaescprintf Documentation
@insertcopying
@end ifnottex

@c %**start of body
@anchor{index doc}@anchor{0}
@c libaescprintf documentation master file, created by
@c sphinx-quickstart on Sat Aug 26 19:38:29 2017.
@c You can adapt this file completely to your liking, but it should at least
@c contain the root `toctree` directive.

@c Copyright (c)  2017  Brüggemann Eddie.
@c Permission is granted to copy, distribute and/or modify this document
@c under the terms of the GNU Free Documentation License, Version 1.3
@c or any later version published by the Free Software Foundation;
@c with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.
@c A copy of the license is included in the section entitled "GNU
@c Free Documentation License".

@menu
* libaescprintf (ANSI Escape Sequence Color Print Format).: libaescprintf ANSI Escape Sequence Color Print Format. 
* Types of libaescprintf:: 
* Defines of libaescprintf:: 
* The styled colored printf() functions;: The styled colored printf functions. 
* The styled colored fprintf() functions: The styled colored fprintf functions. 
* About libaescprintf:: 
* libaescprintf screen-shots;: libaescprintf screen-shots. 
* Indices and tables:: 
* Index:: 

@detailmenu
 --- The Detailed Node Listing ---

libaescprintf (ANSI Escape Sequence Color Print Format).

* Introduction:: 
* libaescprintf:: 

Types of libaescprintf

* Styles:: 
* Colors:: 

Colors

* Foreground colors values:: 
* Background colors values:: 

The styled colored printf() functions:

* Styled Print Format;: Styled Print Format. 
* Color Foreground Print Format;: Color Foreground Print Format. 
* Color Background Print Format;: Color Background Print Format. 
* Styled Foreground Color Print Format;: Styled Foreground Color Print Format. 
* Styled Background Color Print Format;: Styled Background Color Print Format. 
* Color Foreground Background Print Format;: Color Foreground Background Print Format. 
* Styled Color Foreground Background Print Format;: Styled Color Foreground Background Print Format. 

The styled colored fprintf() functions

* File Styled Print Format;: File Styled Print Format. 
* File Color Foreground Print Format;: File Color Foreground Print Format. 
* File Color Background Print Format;: File Color Background Print Format. 
* File Styled Foreground Color Print Format;: File Styled Foreground Color Print Format. 
* Styled Background Color Print Format;: Styled Background Color Print Format<2>. 
* File Color Foreground Background Print Format;: File Color Foreground Background Print Format. 
* File Styled Color Foreground Background Print Format;: File Styled Color Foreground Background Print Format. 

About libaescprintf

* Compatibility:: 
* Note from the author:: 

libaescprintf screen-shots:

* Matrix output:: 
* Text output:: 
* Flags output:: 

@end detailmenu
@end menu

@node libaescprintf ANSI Escape Sequence Color Print Format,Types of libaescprintf,Top,Top
@anchor{libaescprintf doc}@anchor{1}@anchor{libaescprintf libaescprintf-ansi-escape-sequence-color-print-format}@anchor{2}@anchor{libaescprintf welcome-to-libaescprintf-s-documentation}@anchor{3}
@chapter libaescprintf (ANSI Escape Sequence Color Print Format).


@*library: 
libaescprintf


@*version: 
1.0.0


@*author: 
Brüggemann Eddie


@*contact: 
<@email{mrcyberfighter@@gmail.com}>


@*license: 
LGPLv3


@*website: 
<@indicateurl{http://www.open-source-projects.net/libaescprintf/libaescprintf}>


@*release: 
Sep 08, 2017


@menu
* Introduction:: 
* libaescprintf:: 

@end menu

@node Introduction,libaescprintf,,libaescprintf ANSI Escape Sequence Color Print Format
@anchor{libaescprintf introduction}@anchor{4}
@section Introduction


@quotation

@code{libaescprintf} is a little library based on the @code{ANSI escape sequences} and only compatible

with terminals @ref{5,,ANSI escape sequences} compliant terminals.

Most of terminal that I have tested works well but not all.

But in addition @code{libaescprintf} provides

some styles features like @strong{bold}, @strong{strike-trough}, @strong{italic}, and so on...
@end quotation


@display
@w{ }
@end display



@quotation

@cartouche
@quotation Note 
You can insert the @ref{5,,ANSI escapes sequences}

into an @code{echo} command or using the binary @code{tput}

but with this library you can use it into a source code.
@end quotation
@end cartouche

@*note: 
@ref{6,,The goal} of this library is to provide a lightweight textual pretty output.

@end quotation

@node libaescprintf,,Introduction,libaescprintf ANSI Escape Sequence Color Print Format
@anchor{libaescprintf libaescprintf}@anchor{7}
@section libaescprintf


@quotation


@itemize +

@item 
@code{libaescprintf} can be divided into 2 different output functions types.


@itemize +

@item 
@code{printf(...)()}

For simply formatting the output.
@end itemize

and


@itemize +

@item 
@code{fprintf(...)()}

For using the @code{FILE *} @strong{stream} you want.

And why not serializing to a file...
@end itemize

@item 
@code{libaescprintf} can be divided into @ref{8,,background and foreground} colors.

The colors can be divided into Light and Dark colors.

@item 
@code{libaescprintf} provides styles features.
@end itemize
@end quotation

@c Copyright (c)  2017  Brüggemann Eddie.
@c Permission is granted to copy, distribute and/or modify this document
@c under the terms of the GNU Free Documentation License, Version 1.3
@c or any later version published by the Free Software Foundation;
@c with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.
@c A copy of the license is included in the section entitled "GNU
@c Free Documentation License".

@node Types of libaescprintf,Defines of libaescprintf,libaescprintf ANSI Escape Sequence Color Print Format,Top
@anchor{Types_and_defines types-of-libaescprintf}@anchor{9}@anchor{Types_and_defines doc}@anchor{a}
@chapter Types of libaescprintf


@quotation

@code{libaescprintf} make usage of different types of colors and styles:
@end quotation
@anchor{Types_and_defines libaescprintf-color}@anchor{8}
@quotation

@example
// Building a color and a style type. (Used into library functions).

enum style_enum @{ normal = 0 , bold = 1 , dim = 2 , italic = 3, underline = 4 , blink = 5, inverted = 7, hidden = 8, strikethrough = 9 @} ;

//typedef enum color_enum  color_t ;
typedef enum style_enum  style_t ;

// Building a foreground color type. (Used into library functions).

                     // Foreground Normal >= 30   <= 37   (8 colors)
                     // Foreground Light  >= 90   <= 97   (8 colors)
enum fg_color_enum @{ fg_black     = 30,     fg_darkgray     = 90,
                     fg_red       = 31,     fg_lightred     = 91,
                     fg_green     = 32,     fg_lightgreen   = 92,
                     fg_yellow    = 33,     fg_lightyellow  = 93,
                     fg_blue      = 34,     fg_lightblue    = 94,
                     fg_pink      = 35,     fg_lightpink    = 95,
                     fg_cyan      = 36,     fg_lightcyan    = 96,
                     fg_lightgray = 37,     fg_white        = 97,

                     fg_default   = 39 @} ;


// Building a background color type. (Used into library functions).

                     // Background Normal >= 40   <= 47   (8 colors)
                     // Background Light  >= 100  <= 107  (8 colors)
enum bg_color_enum @{ bg_black     = (30+10),     bg_darkgray    = (90+10),
                     bg_red       = (31+10),     bg_lightred    = (91+10),
                     bg_green     = (32+10),     bg_lightgreen  = (92+10),
                     bg_yellow    = (33+10),     bg_lightyellow = (93+10),
                     bg_blue      = (34+10),     bg_lightblue   = (94+10),
                     bg_pink      = (35+10),     bg_lightpink   = (95+10),
                     bg_cyan      = (36+10),     bg_lightcyan   = (96+10),
                     bg_lightgray = (37+10),     bg_white       = (97+10),

                     bg_default   = (39+10) @} ;

typedef enum fg_color_enum  fg_color_t ;
typedef enum bg_color_enum  bg_color_t ;
@end example

@ref{b,,Which you can use in various functions from this library.}
@end quotation

@menu
* Styles:: 
* Colors:: 

@end menu

@node Styles,Colors,,Types of libaescprintf
@anchor{Types_and_defines styles}@anchor{c}@anchor{Types_and_defines libaescprintf-styles}@anchor{d}
@section Styles


@quotation


@itemize +

@item 
normal

@item 
bold

@item 
dim

@item 
italic

@item 
underline

@item 
blink

@item 
inverted

@item 
hidden

@item 
strikethrough
@end itemize
@end quotation

@node Colors,,Styles,Types of libaescprintf
@anchor{Types_and_defines colors}@anchor{e}
@section Colors


@menu
* Foreground colors values:: 
* Background colors values:: 

@end menu

@node Foreground colors values,Background colors values,,Colors
@anchor{Types_and_defines libaescprintf-fg-color}@anchor{f}@anchor{Types_and_defines foreground-colors-values}@anchor{10}
@subsection Foreground colors values


@quotation


@itemize +

@item 
fg_black

@item 
fg_darkgray

@item 
fg_red

@item 
fg_lightred

@item 
fg_green

@item 
fg_lightgreen

@item 
fg_yellow

@item 
fg_lightyellow

@item 
fg_blue

@item 
fg_lightblue

@item 
fg_pink

@item 
fg_lightpink

@item 
fg_cyan

@item 
fg_lightcyan

@item 
fg_lightgray

@item 
fg_white

@item 
fg_default (Your current terminal foreground color).
@end itemize
@end quotation

@node Background colors values,,Foreground colors values,Colors
@anchor{Types_and_defines libaescprintf-bg-color}@anchor{11}@anchor{Types_and_defines background-colors-values}@anchor{12}
@subsection Background colors values


@quotation


@itemize +

@item 
bg_black

@item 
bg_darkgray

@item 
bg_red

@item 
bg_lightred

@item 
bg_green

@item 
bg_lightgreen

@item 
bg_yellow

@item 
bg_lightyellow

@item 
bg_blue

@item 
bg_lightblue

@item 
bg_pink

@item 
bg_lightpink

@item 
bg_cyan

@item 
bg_lightcyan

@item 
bg_lightgray

@item 
bg_white

@item 
bg_default (Your current terminal background color).
@end itemize
@end quotation

@node Defines of libaescprintf,The styled colored printf functions,Types of libaescprintf,Top
@anchor{Types_and_defines defines-of-libaescprintf}@anchor{13}
@chapter Defines of libaescprintf

@anchor{Types_and_defines ansi-escape-sequences}@anchor{5}
@quotation

The ANSI escape sequences are defines as well into @code{libaescprintf}:

@example
/** You can use this defines into raw string formatting. **/

#define ESC   "\033"  // Escape sequence (octal format).

// Dark colors defines.
#define DB    ESC "[30m"  // Dark Black.
#define DR    ESC "[31m"  // Dark Red.
#define DG    ESC "[32m"  // Dark Green.
#define DY    ESC "[33m"  // Dark Yellow.
#define DS    ESC "[34m"  // Dark Sky. (Dark blue)
#define DP    ESC "[35m"  // Dark Pink.
#define DC    ESC "[36m"  // Dark Cyan.
#define DW    ESC "[37m"  // Dark white. (Light Gray)

// Light colors defines.
#define LB    ESC "[90m"  // Light Black.
#define LR    ESC "[91m"  // Light Red.
#define LG    ESC "[92m"  // Light Green.
#define LY    ESC "[93m"  // Light Yellow.
#define LS    ESC "[94m"  // Light Sky.  (Light blue)
#define LP    ESC "[95m"  // Light Pink.
#define LC    ESC "[96m"  // Light Cyan.
#define LW    ESC "[97m"  // Light White.

#define DD    ESC "[39m"  // Default color.

// Styles defines
#define RESET           ESC "[0m"   // Reset.
#define BOLD            ESC "[1m"   // Bold.
#define DIM             ESC "[2m"   // DIM
#define ITALIC          ESC "[3m"   // Italic.
#define UNDERSTRIKE     ESC "[4m"   // Under-strike.
#define BLINK           ESC "[5m"   // Blink (Doesn't work on all terminals look at xterm it work's on it !).
#define INVERTED        ESC "[7m"   // Inverted (Invert foreground and background).
#define HIDDEN          ESC "[8m"   // Hidden (Print only background color).
#define STRIKETROUGHT   ESC "[9m"   // Strike-through.
@end example

You can simply make usage of them into @code{printf()} family functions.
@end quotation

@c Copyright (c)  2017  Brüggemann Eddie.
@c Permission is granted to copy, distribute and/or modify this document
@c under the terms of the GNU Free Documentation License, Version 1.3
@c or any later version published by the Free Software Foundation;
@c with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.
@c A copy of the license is included in the section entitled "GNU
@c Free Documentation License".

@node The styled colored printf functions,The styled colored fprintf functions,Defines of libaescprintf,Top
@anchor{Functions the-styled-colored-printf-functions}@anchor{14}@anchor{Functions doc}@anchor{15}@anchor{Functions libaescprintf-functions}@anchor{b}
@chapter The styled colored @code{printf()} functions:


@menu
* Styled Print Format;: Styled Print Format. 
* Color Foreground Print Format;: Color Foreground Print Format. 
* Color Background Print Format;: Color Background Print Format. 
* Styled Foreground Color Print Format;: Styled Foreground Color Print Format. 
* Styled Background Color Print Format;: Styled Background Color Print Format. 
* Color Foreground Background Print Format;: Color Foreground Background Print Format. 
* Styled Color Foreground Background Print Format;: Styled Color Foreground Background Print Format. 

@end menu

@node Styled Print Format,Color Foreground Print Format,,The styled colored printf functions
@anchor{Functions styled-print-format}@anchor{16}
@section Styled Print Format:


@geindex s_printf (C function)
@anchor{Functions c s_printf}@anchor{17}
@deffn {C Function} int s_printf (style_t@w{ }style, const char@w{ }*fmt, ...)

@*Parameters: 

@itemize *

@item 
@code{style} -- the @ref{d,,style} to apply to the text.

@item 
@code{fmt} -- The format string for the output.
@end itemize


@*Returns: 
The number of characters from the output string or -1 in case of error.


@*Return type: 
@code{int}.

@end deffn

@node Color Foreground Print Format,Color Background Print Format,Styled Print Format,The styled colored printf functions
@anchor{Functions color-foreground-print-format}@anchor{18}
@section Color Foreground Print Format:


@geindex cfg_printf (C function)
@anchor{Functions c cfg_printf}@anchor{19}
@deffn {C Function} int cfg_printf (fg_color_t@w{ }color, const char@w{ }*fmt, ...)

@*Parameters: 

@itemize *

@item 
@code{fg_color} -- The @ref{f,,foreground color} to apply.

@item 
@code{fmt} -- The format string for the output.
@end itemize


@*Returns: 
The number of characters from the output string or -1 in case of error.


@*Return type: 
@code{int}.

@end deffn

@node Color Background Print Format,Styled Foreground Color Print Format,Color Foreground Print Format,The styled colored printf functions
@anchor{Functions color-background-print-format}@anchor{1a}
@section Color Background Print Format:


@geindex cbg_printf (C function)
@anchor{Functions c cbg_printf}@anchor{1b}
@deffn {C Function} int cbg_printf (bg_color_t@w{ }bgcolor, const char@w{ }*fmt, ...)

@*Parameters: 

@itemize *

@item 
@code{bg_color} -- The @ref{11,,foreground color} to apply.

@item 
@code{fmt} -- The format string for the output.
@end itemize


@*Returns: 
The number of characters from the output string or -1 in case of error.


@*Return type: 
@code{int}.

@end deffn

@node Styled Foreground Color Print Format,Styled Background Color Print Format,Color Background Print Format,The styled colored printf functions
@anchor{Functions styled-foreground-color-print-format}@anchor{1c}
@section Styled Foreground Color Print Format:


@geindex scfg_printf (C function)
@anchor{Functions c scfg_printf}@anchor{1d}
@deffn {C Function} int scfg_printf (style_t@w{ }style, fg_color_t@w{ }fg_color, const char@w{ }*fmt, ...)

@*Parameters: 

@itemize *

@item 
@code{style} -- the @ref{d,,style} to apply to the text.

@item 
@code{fg_color} -- The @ref{f,,foreground color} to apply.

@item 
@code{fmt} -- The format string for the output.
@end itemize


@*Returns: 
The number of characters from the output string or -1 in case of error.


@*Return type: 
@code{int}.

@end deffn

@node Styled Background Color Print Format,Color Foreground Background Print Format,Styled Foreground Color Print Format,The styled colored printf functions
@anchor{Functions styled-background-color-print-format}@anchor{1e}
@section Styled Background Color Print Format:


@geindex scbg_printf (C function)
@anchor{Functions c scbg_printf}@anchor{1f}
@deffn {C Function} int scbg_printf (style_t@w{ }style, bg_color_t@w{ }bg_color, const char@w{ }*fmt, ...)

@*Parameters: 

@itemize *

@item 
@code{style} -- the @ref{d,,style} to apply to the text.

@item 
@code{bg_color} -- The @ref{11,,background color} to apply.

@item 
@code{fmt} -- The format string for the output.
@end itemize


@*Returns: 
The number of characters from the output string or -1 in case of error.


@*Return type: 
@code{int}.

@end deffn

@node Color Foreground Background Print Format,Styled Color Foreground Background Print Format,Styled Background Color Print Format,The styled colored printf functions
@anchor{Functions color-foreground-background-print-format}@anchor{20}
@section Color Foreground Background Print Format:


@geindex cfgbg_printf (C function)
@anchor{Functions c cfgbg_printf}@anchor{21}
@deffn {C Function} int cfgbg_printf (fg_color_t@w{ }fg_color, bg_color_t@w{ }bg_color, const char@w{ }*fmt, ...)

@*Parameters: 

@itemize *

@item 
@code{fg_color} -- The @ref{f,,foreground color} to apply.

@item 
@code{bg_color} -- The @ref{11,,foreground color} to apply.

@item 
@code{fmt} -- The format string for the output.
@end itemize


@*Returns: 
The number of characters from the output string or -1 in case of error.


@*Return type: 
@code{int}.

@end deffn

@node Styled Color Foreground Background Print Format,,Color Foreground Background Print Format,The styled colored printf functions
@anchor{Functions styled-color-foreground-background-print-format}@anchor{22}
@section Styled Color Foreground Background Print Format:


@geindex scfgbg_printf (C function)
@anchor{Functions c scfgbg_printf}@anchor{23}
@deffn {C Function} int scfgbg_printf (style_t@w{ }style, fg_color_t@w{ }fg_color, bg_color_t@w{ }bg_color, const char@w{ }*fmt, ...)

@*Parameters: 

@itemize *

@item 
@code{style} -- the @ref{d,,style} to apply to the text.

@item 
@code{fg_color} -- The @ref{f,,foreground color} to apply.

@item 
@code{bg_color} -- The @ref{11,,foreground color} to apply.

@item 
@code{fmt} -- The format string for the output.
@end itemize


@*Returns: 
The number of characters from the output string or -1 in case of error.


@*Return type: 
@code{int}.

@end deffn

@node The styled colored fprintf functions,About libaescprintf,The styled colored printf functions,Top
@anchor{Functions the-styled-colored-fprintf-functions}@anchor{24}
@chapter The styled colored @code{fprintf()} functions


@menu
* File Styled Print Format;: File Styled Print Format. 
* File Color Foreground Print Format;: File Color Foreground Print Format. 
* File Color Background Print Format;: File Color Background Print Format. 
* File Styled Foreground Color Print Format;: File Styled Foreground Color Print Format. 
* Styled Background Color Print Format;: Styled Background Color Print Format<2>. 
* File Color Foreground Background Print Format;: File Color Foreground Background Print Format. 
* File Styled Color Foreground Background Print Format;: File Styled Color Foreground Background Print Format. 

@end menu

@node File Styled Print Format,File Color Foreground Print Format,,The styled colored fprintf functions
@anchor{Functions file-styled-print-format}@anchor{25}
@section File Styled Print Format:


@geindex s_fprintf (C function)
@anchor{Functions c s_fprintf}@anchor{26}
@deffn {C Function} int s_fprintf (FILE@w{ }*fp, style_t@w{ }style, const char@w{ }*fmt, ...)

@*Parameters: 

@itemize *

@item 
@code{fp} -- A @code{FILE} pointer.

@item 
@code{style} -- the @ref{d,,style} to apply to the text.

@item 
@code{fmt} -- The format string for the output.
@end itemize


@*Returns: 
The number of characters from the output string or -1 in case of error.


@*Return type: 
@code{int}.

@end deffn

@node File Color Foreground Print Format,File Color Background Print Format,File Styled Print Format,The styled colored fprintf functions
@anchor{Functions file-color-foreground-print-format}@anchor{27}
@section File Color Foreground Print Format:


@geindex cfg_fprintf (C function)
@anchor{Functions c cfg_fprintf}@anchor{28}
@deffn {C Function} int cfg_fprintf (FILE@w{ }*fp, fg_color_t@w{ }color, const char@w{ }*fmt, ...)

@*Parameters: 

@itemize *

@item 
@code{fp} -- A @code{FILE} pointer.

@item 
@code{fg_color} -- The @ref{f,,foreground color} to apply.

@item 
@code{fmt} -- The format string for the output.
@end itemize


@*Returns: 
The number of characters from the output string or -1 in case of error.


@*Return type: 
@code{int}.

@end deffn

@node File Color Background Print Format,File Styled Foreground Color Print Format,File Color Foreground Print Format,The styled colored fprintf functions
@anchor{Functions file-color-background-print-format}@anchor{29}
@section File Color Background Print Format:


@geindex cbg_fprintf (C function)
@anchor{Functions c cbg_fprintf}@anchor{2a}
@deffn {C Function} int cbg_fprintf (FILE@w{ }*fp, bg_color_t@w{ }bgcolor, const char@w{ }*fmt, ...)

@*Parameters: 

@itemize *

@item 
@code{fp} -- A @code{FILE} pointer.

@item 
@code{bg_color} -- The @ref{11,,foreground color} to apply.

@item 
@code{fmt} -- The format string for the output.
@end itemize


@*Returns: 
The number of characters from the output string or -1 in case of error.


@*Return type: 
@code{int}.

@end deffn

@node File Styled Foreground Color Print Format,Styled Background Color Print Format<2>,File Color Background Print Format,The styled colored fprintf functions
@anchor{Functions file-styled-foreground-color-print-format}@anchor{2b}
@section File Styled Foreground Color Print Format:


@geindex scfg_fprintf (C function)
@anchor{Functions c scfg_fprintf}@anchor{2c}
@deffn {C Function} int scfg_fprintf (FILE@w{ }*fp, style_t@w{ }style, fg_color_t@w{ }fg_color, const char@w{ }*fmt, ...)

@*Parameters: 

@itemize *

@item 
@code{fp} -- A @code{FILE} pointer.

@item 
@code{style} -- the @ref{d,,style} to apply to the text.

@item 
@code{fg_color} -- The @ref{f,,foreground color} to apply.

@item 
@code{fmt} -- The format string for the output.
@end itemize


@*Returns: 
The number of characters from the output string or -1 in case of error.


@*Return type: 
@code{int}.

@end deffn

@node Styled Background Color Print Format<2>,File Color Foreground Background Print Format,File Styled Foreground Color Print Format,The styled colored fprintf functions
@anchor{Functions id1}@anchor{2d}
@section Styled Background Color Print Format:


@geindex scbg_printf (C function)

@deffn {C Function} int scbg_printf (FILE@w{ }*fp, style_t@w{ }style, bg_color_t@w{ }bg_color, const char@w{ }*fmt, ...)

@*Parameters: 

@itemize *

@item 
@code{fp} -- A @code{FILE} pointer.

@item 
@code{style} -- the @ref{d,,style} to apply to the text.

@item 
@code{bg_color} -- The @ref{11,,background color} to apply.

@item 
@code{fmt} -- The format string for the output.
@end itemize


@*Returns: 
The number of characters from the output string or -1 in case of error.


@*Return type: 
@code{int}.

@end deffn

@node File Color Foreground Background Print Format,File Styled Color Foreground Background Print Format,Styled Background Color Print Format<2>,The styled colored fprintf functions
@anchor{Functions file-color-foreground-background-print-format}@anchor{2e}
@section File Color Foreground Background Print Format:


@geindex cfgbg_fprintf (C function)
@anchor{Functions c cfgbg_fprintf}@anchor{2f}
@deffn {C Function} int cfgbg_fprintf (FILE@w{ }*fp, fg_color_t@w{ }fg_color, bg_color_t@w{ }bg_color, const char@w{ }*fmt, ...)

@*Parameters: 

@itemize *

@item 
@code{fp} -- A @code{FILE} pointer.

@item 
@code{fg_color} -- The @ref{f,,foreground color} to apply.

@item 
@code{bg_color} -- The @ref{11,,foreground color} to apply.

@item 
@code{fmt} -- The format string for the output.
@end itemize


@*Returns: 
The number of characters from the output string or -1 in case of error.


@*Return type: 
@code{int}.

@end deffn

@node File Styled Color Foreground Background Print Format,,File Color Foreground Background Print Format,The styled colored fprintf functions
@anchor{Functions file-styled-color-foreground-background-print-format}@anchor{30}
@section File Styled Color Foreground Background Print Format:


@geindex scfgbg_fprintf (C function)
@anchor{Functions c scfgbg_fprintf}@anchor{31}
@deffn {C Function} int scfgbg_fprintf (FILE@w{ }*fp, style_t@w{ }style, fg_color_t@w{ }fg_color, bg_color_t@w{ }bg_color, const char@w{ }*fmt, ...)

@*Parameters: 

@itemize *

@item 
@code{fp} -- A @code{FILE} pointer.

@item 
@code{style} -- the @ref{d,,style} to apply to the text.

@item 
@code{fg_color} -- The @ref{f,,foreground color} to apply.

@item 
@code{bg_color} -- The @ref{11,,foreground color} to apply.

@item 
@code{fmt} -- The format string for the output.
@end itemize


@*Returns: 
The number of characters from the output string or -1 in case of error.


@*Return type: 
@code{int}.

@end deffn

@c Copyright (c)  2017  Brüggemann Eddie.
@c Permission is granted to copy, distribute and/or modify this document
@c under the terms of the GNU Free Documentation License, Version 1.3
@c or any later version published by the Free Software Foundation;
@c with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.
@c A copy of the license is included in the section entitled "GNU
@c Free Documentation License".

@node About libaescprintf,libaescprintf screen-shots,The styled colored fprintf functions,Top
@anchor{About_libaescprintf doc}@anchor{32}@anchor{About_libaescprintf about-libaescprintf}@anchor{33}
@chapter About @code{libaescprintf}


@quotation

At first I often try myself to find the generic function into termcap to get the colors and styles codes

for building a library compliant with any terminal and I fail to find it...

So I often try to get some help from a terminal dinosaur which master termcap or termios to

make a more generic library.

But nobody @strong{HOME}...
@end quotation

@cartouche
@quotation Note 
I can do more with terminal Sequences as displaying a True Color image (RGB) into a terminal

(xterm, terminals build with libvte-2.91 on GNU/Linux)

But I must reduce the cursor to the minimum size

for doing this but I can't restore a normal cursor size...

@*enjoy: 
So enjoy using @code{libaescprintf} for ANSI art as I enjoy to write this little library.

@end quotation
@end cartouche

@menu
* Compatibility:: 
* Note from the author:: 

@end menu

@node Compatibility,Note from the author,,About libaescprintf
@anchor{About_libaescprintf compatibility}@anchor{34}
@section Compatibility


@quotation

@code{libaescprintf} was tested on as many terminals I could find into the repositories,

sometimes some terminals either don't blink or don't accept @strong{ANSI} escape sequences at all.

But most of the time it works well.

It works in most of the terminals: konsole as gnome-terminal and many others.

But the old bug concern the background and the linefeed appears on some terminals:

if you set the background color other than default and set an linefeed the entire line is

background highlighted with the chosen color per example the Apple-Terminal do this one

(but the blinking effect works well with it).
@end quotation

@node Note from the author,,Compatibility,About libaescprintf
@anchor{About_libaescprintf note-from-the-author}@anchor{35}
@section Note from the author

@anchor{About_libaescprintf libaescprintf-goal}@anchor{6}
@quotation

I don't try to reinvent the wheel but simply provide this minimalist library

in the following goals:


@enumerate 

@item 
At first to provide a lightweight library for only textual effect.

@item 
To catch your attention so that someone can help me to make the library
@end enumerate

@quotation

universal, using termcap (or termios).
@end quotation
@end quotation

@c Copyright (c)  2017  Brüggemann Eddie.
@c Permission is granted to copy, distribute and/or modify this document
@c under the terms of the GNU Free Documentation License, Version 1.3
@c or any later version published by the Free Software Foundation;
@c with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.
@c A copy of the license is included in the section entitled "GNU
@c Free Documentation License".

@node libaescprintf screen-shots,Indices and tables,About libaescprintf,Top
@anchor{libaescprintf_example_screenshot doc}@anchor{36}@anchor{libaescprintf_example_screenshot libaescprintf-screen-shots}@anchor{37}
@chapter libaescprintf screen-shots:


@menu
* Matrix output:: 
* Text output:: 
* Flags output:: 

@end menu

@node Matrix output,Text output,,libaescprintf screen-shots
@anchor{libaescprintf_example_screenshot matrix-output}@anchor{38}
@section Matrix output


@image{libaescprintf_matrix_example_screenshot,,,,png}

@node Text output,Flags output,Matrix output,libaescprintf screen-shots
@anchor{libaescprintf_example_screenshot text-output}@anchor{39}
@section Text output


@image{libaescprintf_text_example_screenshot,,,,png}

@node Flags output,,Text output,libaescprintf screen-shots
@anchor{libaescprintf_example_screenshot flags-output}@anchor{3a}
@section Flags output


@image{libaescprintf_horizontal_flag_example_screenshot,,,,png}

@image{libaescprintf_vertical_flag_example_screenshot,,,,png}

@node Indices and tables,Index,libaescprintf screen-shots,Top
@anchor{index indices-and-tables}@anchor{3b}
@unnumbered Indices and tables



@itemize *

@item 
genindex

@item 
modindex

@item 
search
@end itemize

@node Index,,Indices and tables,Top
@unnumbered Index


@printindex ge


@c %**end of body
@bye
