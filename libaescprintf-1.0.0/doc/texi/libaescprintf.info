This is libaescprintf.info, produced by makeinfo version 6.3 from
libaescprintf.texi.

     libaescprintf 1.0.0, Sep 08, 2017

     Brüggemann Eddie

     Copyright © 2017, Brüggemann Eddie

INFO-DIR-SECTION Miscellaneous
START-INFO-DIR-ENTRY
* libaescprintf: (libaescprintf.info). One line description of project.
END-INFO-DIR-ENTRY


   Generated by Sphinx 1.5.3.


File: libaescprintf.info,  Node: Top,  Next: libaescprintf ANSI Escape Sequence Color Print Format,  Up: (dir)

libaescprintf Documentation
***************************

     libaescprintf 1.0.0, Sep 08, 2017

     Brüggemann Eddie

     Copyright © 2017, Brüggemann Eddie

* Menu:

* libaescprintf (ANSI Escape Sequence Color Print Format).: libaescprintf ANSI Escape Sequence Color Print Format. 
* Types of libaescprintf:: 
* Defines of libaescprintf:: 
* The styled colored printf() functions;: The styled colored printf functions. 
* The styled colored fprintf() functions: The styled colored fprintf functions. 
* About libaescprintf:: 
* libaescprintf screen-shots;: libaescprintf screen-shots. 
* Indices and tables:: 
* Index:: 

 — The Detailed Node Listing —

libaescprintf (ANSI Escape Sequence Color Print Format).

* Introduction:: 
* libaescprintf:: 

Types of libaescprintf

* Styles:: 
* Colors:: 

Colors

* Foreground colors values:: 
* Background colors values:: 

The styled colored printf() functions:

* Styled Print Format;: Styled Print Format. 
* Color Foreground Print Format;: Color Foreground Print Format. 
* Color Background Print Format;: Color Background Print Format. 
* Styled Foreground Color Print Format;: Styled Foreground Color Print Format. 
* Styled Background Color Print Format;: Styled Background Color Print Format. 
* Color Foreground Background Print Format;: Color Foreground Background Print Format. 
* Styled Color Foreground Background Print Format;: Styled Color Foreground Background Print Format. 

The styled colored fprintf() functions

* File Styled Print Format;: File Styled Print Format. 
* File Color Foreground Print Format;: File Color Foreground Print Format. 
* File Color Background Print Format;: File Color Background Print Format. 
* File Styled Foreground Color Print Format;: File Styled Foreground Color Print Format. 
* Styled Background Color Print Format;: Styled Background Color Print Format<2>. 
* File Color Foreground Background Print Format;: File Color Foreground Background Print Format. 
* File Styled Color Foreground Background Print Format;: File Styled Color Foreground Background Print Format. 

About libaescprintf

* Compatibility:: 
* Note from the author:: 

libaescprintf screen-shots:

* Matrix output:: 
* Text output:: 
* Flags output:: 



File: libaescprintf.info,  Node: libaescprintf ANSI Escape Sequence Color Print Format,  Next: Types of libaescprintf,  Prev: Top,  Up: Top

1 libaescprintf (ANSI Escape Sequence Color Print Format).
**********************************************************


library: libaescprintf


version: 1.0.0


author: Brüggemann Eddie


contact: <<mrcyberfighter@gmail.com>>


license: LGPLv3


website:
<‘http://www.open-source-projects.net/libaescprintf/libaescprintf’>


release: Sep 08, 2017

* Menu:

* Introduction:: 
* libaescprintf:: 


File: libaescprintf.info,  Node: Introduction,  Next: libaescprintf,  Up: libaescprintf ANSI Escape Sequence Color Print Format

1.1 Introduction
================

     ‘libaescprintf’ is a little library based on the ‘ANSI escape
     sequences’ and only compatible

     with terminals *note ANSI escape sequences: 5. compliant terminals.

     Most of terminal that I have tested works well but not all.

     But in addition ‘libaescprintf’ provides

     some styles features like `bold', `strike-trough', `italic', and so
     on...

 

          Note: You can insert the *note ANSI escapes sequences: 5.

          into an ‘echo’ command or using the binary ‘tput’

          but with this library you can use it into a source code.


     note: *note The goal: 6. of this library is to provide a
     lightweight textual pretty output.


File: libaescprintf.info,  Node: libaescprintf,  Prev: Introduction,  Up: libaescprintf ANSI Escape Sequence Color Print Format

1.2 libaescprintf
=================

        + ‘libaescprintf’ can be divided into 2 different output
          functions types.

             + ‘printf(...)()’

               For simply formatting the output.

          and

             + ‘fprintf(...)()’

               For using the ‘FILE *’ `stream' you want.

               And why not serializing to a file...

        + ‘libaescprintf’ can be divided into *note background and
          foreground: 8. colors.

          The colors can be divided into Light and Dark colors.

        + ‘libaescprintf’ provides styles features.


File: libaescprintf.info,  Node: Types of libaescprintf,  Next: Defines of libaescprintf,  Prev: libaescprintf ANSI Escape Sequence Color Print Format,  Up: Top

2 Types of libaescprintf
************************

     ‘libaescprintf’ make usage of different types of colors and styles:

          // Building a color and a style type. (Used into library functions).

          enum style_enum { normal = 0 , bold = 1 , dim = 2 , italic = 3, underline = 4 , blink = 5, inverted = 7, hidden = 8, strikethrough = 9 } ;

          //typedef enum color_enum  color_t ;
          typedef enum style_enum  style_t ;

          // Building a foreground color type. (Used into library functions).

                               // Foreground Normal >= 30   <= 37   (8 colors)
                               // Foreground Light  >= 90   <= 97   (8 colors)
          enum fg_color_enum { fg_black     = 30,     fg_darkgray     = 90,
                               fg_red       = 31,     fg_lightred     = 91,
                               fg_green     = 32,     fg_lightgreen   = 92,
                               fg_yellow    = 33,     fg_lightyellow  = 93,
                               fg_blue      = 34,     fg_lightblue    = 94,
                               fg_pink      = 35,     fg_lightpink    = 95,
                               fg_cyan      = 36,     fg_lightcyan    = 96,
                               fg_lightgray = 37,     fg_white        = 97,

                               fg_default   = 39 } ;


          // Building a background color type. (Used into library functions).

                               // Background Normal >= 40   <= 47   (8 colors)
                               // Background Light  >= 100  <= 107  (8 colors)
          enum bg_color_enum { bg_black     = (30+10),     bg_darkgray    = (90+10),
                               bg_red       = (31+10),     bg_lightred    = (91+10),
                               bg_green     = (32+10),     bg_lightgreen  = (92+10),
                               bg_yellow    = (33+10),     bg_lightyellow = (93+10),
                               bg_blue      = (34+10),     bg_lightblue   = (94+10),
                               bg_pink      = (35+10),     bg_lightpink   = (95+10),
                               bg_cyan      = (36+10),     bg_lightcyan   = (96+10),
                               bg_lightgray = (37+10),     bg_white       = (97+10),

                               bg_default   = (39+10) } ;

          typedef enum fg_color_enum  fg_color_t ;
          typedef enum bg_color_enum  bg_color_t ;

     *note Which you can use in various functions from this library.: b.

* Menu:

* Styles:: 
* Colors:: 


File: libaescprintf.info,  Node: Styles,  Next: Colors,  Up: Types of libaescprintf

2.1 Styles
==========

        + normal

        + bold

        + dim

        + italic

        + underline

        + blink

        + inverted

        + hidden

        + strikethrough


File: libaescprintf.info,  Node: Colors,  Prev: Styles,  Up: Types of libaescprintf

2.2 Colors
==========

* Menu:

* Foreground colors values:: 
* Background colors values:: 


File: libaescprintf.info,  Node: Foreground colors values,  Next: Background colors values,  Up: Colors

2.2.1 Foreground colors values
------------------------------

        + fg_black

        + fg_darkgray

        + fg_red

        + fg_lightred

        + fg_green

        + fg_lightgreen

        + fg_yellow

        + fg_lightyellow

        + fg_blue

        + fg_lightblue

        + fg_pink

        + fg_lightpink

        + fg_cyan

        + fg_lightcyan

        + fg_lightgray

        + fg_white

        + fg_default (Your current terminal foreground color).


File: libaescprintf.info,  Node: Background colors values,  Prev: Foreground colors values,  Up: Colors

2.2.2 Background colors values
------------------------------

        + bg_black

        + bg_darkgray

        + bg_red

        + bg_lightred

        + bg_green

        + bg_lightgreen

        + bg_yellow

        + bg_lightyellow

        + bg_blue

        + bg_lightblue

        + bg_pink

        + bg_lightpink

        + bg_cyan

        + bg_lightcyan

        + bg_lightgray

        + bg_white

        + bg_default (Your current terminal background color).


File: libaescprintf.info,  Node: Defines of libaescprintf,  Next: The styled colored printf functions,  Prev: Types of libaescprintf,  Up: Top

3 Defines of libaescprintf
**************************

     The ANSI escape sequences are defines as well into ‘libaescprintf’:

          /** You can use this defines into raw string formatting. **/

          #define ESC   "\033"  // Escape sequence (octal format).

          // Dark colors defines.
          #define DB    ESC "[30m"  // Dark Black.
          #define DR    ESC "[31m"  // Dark Red.
          #define DG    ESC "[32m"  // Dark Green.
          #define DY    ESC "[33m"  // Dark Yellow.
          #define DS    ESC "[34m"  // Dark Sky. (Dark blue)
          #define DP    ESC "[35m"  // Dark Pink.
          #define DC    ESC "[36m"  // Dark Cyan.
          #define DW    ESC "[37m"  // Dark white. (Light Gray)

          // Light colors defines.
          #define LB    ESC "[90m"  // Light Black.
          #define LR    ESC "[91m"  // Light Red.
          #define LG    ESC "[92m"  // Light Green.
          #define LY    ESC "[93m"  // Light Yellow.
          #define LS    ESC "[94m"  // Light Sky.  (Light blue)
          #define LP    ESC "[95m"  // Light Pink.
          #define LC    ESC "[96m"  // Light Cyan.
          #define LW    ESC "[97m"  // Light White.

          #define DD    ESC "[39m"  // Default color.

          // Styles defines
          #define RESET           ESC "[0m"   // Reset.
          #define BOLD            ESC "[1m"   // Bold.
          #define DIM             ESC "[2m"   // DIM
          #define ITALIC          ESC "[3m"   // Italic.
          #define UNDERSTRIKE     ESC "[4m"   // Under-strike.
          #define BLINK           ESC "[5m"   // Blink (Doesn't work on all terminals look at xterm it work's on it !).
          #define INVERTED        ESC "[7m"   // Inverted (Invert foreground and background).
          #define HIDDEN          ESC "[8m"   // Hidden (Print only background color).
          #define STRIKETROUGHT   ESC "[9m"   // Strike-through.

     You can simply make usage of them into ‘printf()’ family functions.


File: libaescprintf.info,  Node: The styled colored printf functions,  Next: The styled colored fprintf functions,  Prev: Defines of libaescprintf,  Up: Top

4 The styled colored ‘printf()’ functions:
******************************************

* Menu:

* Styled Print Format;: Styled Print Format. 
* Color Foreground Print Format;: Color Foreground Print Format. 
* Color Background Print Format;: Color Background Print Format. 
* Styled Foreground Color Print Format;: Styled Foreground Color Print Format. 
* Styled Background Color Print Format;: Styled Background Color Print Format. 
* Color Foreground Background Print Format;: Color Foreground Background Print Format. 
* Styled Color Foreground Background Print Format;: Styled Color Foreground Background Print Format. 


File: libaescprintf.info,  Node: Styled Print Format,  Next: Color Foreground Print Format,  Up: The styled colored printf functions

4.1 Styled Print Format:
========================

 -- C Function: int s_printf (style_t style, const char *fmt, ...)


     Parameters:

        * ‘style’ – the *note style: d. to apply to the text.

        * ‘fmt’ – The format string for the output.


     Returns: The number of characters from the output string or -1 in
     case of error.


     Return type: ‘int’.


File: libaescprintf.info,  Node: Color Foreground Print Format,  Next: Color Background Print Format,  Prev: Styled Print Format,  Up: The styled colored printf functions

4.2 Color Foreground Print Format:
==================================

 -- C Function: int cfg_printf (fg_color_t color, const char *fmt, ...)


     Parameters:

        * ‘fg_color’ – The *note foreground color: f. to apply.

        * ‘fmt’ – The format string for the output.


     Returns: The number of characters from the output string or -1 in
     case of error.


     Return type: ‘int’.


File: libaescprintf.info,  Node: Color Background Print Format,  Next: Styled Foreground Color Print Format,  Prev: Color Foreground Print Format,  Up: The styled colored printf functions

4.3 Color Background Print Format:
==================================

 -- C Function: int cbg_printf (bg_color_t bgcolor, const char *fmt,
          ...)


     Parameters:

        * ‘bg_color’ – The *note foreground color: 11. to apply.

        * ‘fmt’ – The format string for the output.


     Returns: The number of characters from the output string or -1 in
     case of error.


     Return type: ‘int’.


File: libaescprintf.info,  Node: Styled Foreground Color Print Format,  Next: Styled Background Color Print Format,  Prev: Color Background Print Format,  Up: The styled colored printf functions

4.4 Styled Foreground Color Print Format:
=========================================

 -- C Function: int scfg_printf (style_t style, fg_color_t fg_color,
          const char *fmt, ...)


     Parameters:

        * ‘style’ – the *note style: d. to apply to the text.

        * ‘fg_color’ – The *note foreground color: f. to apply.

        * ‘fmt’ – The format string for the output.


     Returns: The number of characters from the output string or -1 in
     case of error.


     Return type: ‘int’.


File: libaescprintf.info,  Node: Styled Background Color Print Format,  Next: Color Foreground Background Print Format,  Prev: Styled Foreground Color Print Format,  Up: The styled colored printf functions

4.5 Styled Background Color Print Format:
=========================================

 -- C Function: int scbg_printf (style_t style, bg_color_t bg_color,
          const char *fmt, ...)


     Parameters:

        * ‘style’ – the *note style: d. to apply to the text.

        * ‘bg_color’ – The *note background color: 11. to apply.

        * ‘fmt’ – The format string for the output.


     Returns: The number of characters from the output string or -1 in
     case of error.


     Return type: ‘int’.


File: libaescprintf.info,  Node: Color Foreground Background Print Format,  Next: Styled Color Foreground Background Print Format,  Prev: Styled Background Color Print Format,  Up: The styled colored printf functions

4.6 Color Foreground Background Print Format:
=============================================

 -- C Function: int cfgbg_printf (fg_color_t fg_color,
          bg_color_t bg_color, const char *fmt, ...)


     Parameters:

        * ‘fg_color’ – The *note foreground color: f. to apply.

        * ‘bg_color’ – The *note foreground color: 11. to apply.

        * ‘fmt’ – The format string for the output.


     Returns: The number of characters from the output string or -1 in
     case of error.


     Return type: ‘int’.


File: libaescprintf.info,  Node: Styled Color Foreground Background Print Format,  Prev: Color Foreground Background Print Format,  Up: The styled colored printf functions

4.7 Styled Color Foreground Background Print Format:
====================================================

 -- C Function: int scfgbg_printf (style_t style, fg_color_t fg_color,
          bg_color_t bg_color, const char *fmt, ...)


     Parameters:

        * ‘style’ – the *note style: d. to apply to the text.

        * ‘fg_color’ – The *note foreground color: f. to apply.

        * ‘bg_color’ – The *note foreground color: 11. to apply.

        * ‘fmt’ – The format string for the output.


     Returns: The number of characters from the output string or -1 in
     case of error.


     Return type: ‘int’.


File: libaescprintf.info,  Node: The styled colored fprintf functions,  Next: About libaescprintf,  Prev: The styled colored printf functions,  Up: Top

5 The styled colored ‘fprintf()’ functions
******************************************

* Menu:

* File Styled Print Format;: File Styled Print Format. 
* File Color Foreground Print Format;: File Color Foreground Print Format. 
* File Color Background Print Format;: File Color Background Print Format. 
* File Styled Foreground Color Print Format;: File Styled Foreground Color Print Format. 
* Styled Background Color Print Format;: Styled Background Color Print Format<2>. 
* File Color Foreground Background Print Format;: File Color Foreground Background Print Format. 
* File Styled Color Foreground Background Print Format;: File Styled Color Foreground Background Print Format. 


File: libaescprintf.info,  Node: File Styled Print Format,  Next: File Color Foreground Print Format,  Up: The styled colored fprintf functions

5.1 File Styled Print Format:
=============================

 -- C Function: int s_fprintf (FILE *fp, style_t style, const char *fmt,
          ...)


     Parameters:

        * ‘fp’ – A ‘FILE’ pointer.

        * ‘style’ – the *note style: d. to apply to the text.

        * ‘fmt’ – The format string for the output.


     Returns: The number of characters from the output string or -1 in
     case of error.


     Return type: ‘int’.


File: libaescprintf.info,  Node: File Color Foreground Print Format,  Next: File Color Background Print Format,  Prev: File Styled Print Format,  Up: The styled colored fprintf functions

5.2 File Color Foreground Print Format:
=======================================

 -- C Function: int cfg_fprintf (FILE *fp, fg_color_t color, const
          char *fmt, ...)


     Parameters:

        * ‘fp’ – A ‘FILE’ pointer.

        * ‘fg_color’ – The *note foreground color: f. to apply.

        * ‘fmt’ – The format string for the output.


     Returns: The number of characters from the output string or -1 in
     case of error.


     Return type: ‘int’.


File: libaescprintf.info,  Node: File Color Background Print Format,  Next: File Styled Foreground Color Print Format,  Prev: File Color Foreground Print Format,  Up: The styled colored fprintf functions

5.3 File Color Background Print Format:
=======================================

 -- C Function: int cbg_fprintf (FILE *fp, bg_color_t bgcolor, const
          char *fmt, ...)


     Parameters:

        * ‘fp’ – A ‘FILE’ pointer.

        * ‘bg_color’ – The *note foreground color: 11. to apply.

        * ‘fmt’ – The format string for the output.


     Returns: The number of characters from the output string or -1 in
     case of error.


     Return type: ‘int’.


File: libaescprintf.info,  Node: File Styled Foreground Color Print Format,  Next: Styled Background Color Print Format<2>,  Prev: File Color Background Print Format,  Up: The styled colored fprintf functions

5.4 File Styled Foreground Color Print Format:
==============================================

 -- C Function: int scfg_fprintf (FILE *fp, style_t style,
          fg_color_t fg_color, const char *fmt, ...)


     Parameters:

        * ‘fp’ – A ‘FILE’ pointer.

        * ‘style’ – the *note style: d. to apply to the text.

        * ‘fg_color’ – The *note foreground color: f. to apply.

        * ‘fmt’ – The format string for the output.


     Returns: The number of characters from the output string or -1 in
     case of error.


     Return type: ‘int’.


File: libaescprintf.info,  Node: Styled Background Color Print Format<2>,  Next: File Color Foreground Background Print Format,  Prev: File Styled Foreground Color Print Format,  Up: The styled colored fprintf functions

5.5 Styled Background Color Print Format:
=========================================

 -- C Function: int scbg_printf (FILE *fp, style_t style,
          bg_color_t bg_color, const char *fmt, ...)


     Parameters:

        * ‘fp’ – A ‘FILE’ pointer.

        * ‘style’ – the *note style: d. to apply to the text.

        * ‘bg_color’ – The *note background color: 11. to apply.

        * ‘fmt’ – The format string for the output.


     Returns: The number of characters from the output string or -1 in
     case of error.


     Return type: ‘int’.


File: libaescprintf.info,  Node: File Color Foreground Background Print Format,  Next: File Styled Color Foreground Background Print Format,  Prev: Styled Background Color Print Format<2>,  Up: The styled colored fprintf functions

5.6 File Color Foreground Background Print Format:
==================================================

 -- C Function: int cfgbg_fprintf (FILE *fp, fg_color_t fg_color,
          bg_color_t bg_color, const char *fmt, ...)


     Parameters:

        * ‘fp’ – A ‘FILE’ pointer.

        * ‘fg_color’ – The *note foreground color: f. to apply.

        * ‘bg_color’ – The *note foreground color: 11. to apply.

        * ‘fmt’ – The format string for the output.


     Returns: The number of characters from the output string or -1 in
     case of error.


     Return type: ‘int’.


File: libaescprintf.info,  Node: File Styled Color Foreground Background Print Format,  Prev: File Color Foreground Background Print Format,  Up: The styled colored fprintf functions

5.7 File Styled Color Foreground Background Print Format:
=========================================================

 -- C Function: int scfgbg_fprintf (FILE *fp, style_t style,
          fg_color_t fg_color, bg_color_t bg_color, const char *fmt,
          ...)


     Parameters:

        * ‘fp’ – A ‘FILE’ pointer.

        * ‘style’ – the *note style: d. to apply to the text.

        * ‘fg_color’ – The *note foreground color: f. to apply.

        * ‘bg_color’ – The *note foreground color: 11. to apply.

        * ‘fmt’ – The format string for the output.


     Returns: The number of characters from the output string or -1 in
     case of error.


     Return type: ‘int’.


File: libaescprintf.info,  Node: About libaescprintf,  Next: libaescprintf screen-shots,  Prev: The styled colored fprintf functions,  Up: Top

6 About ‘libaescprintf’
***********************

     At first I often try myself to find the generic function into
     termcap to get the colors and styles codes

     for building a library compliant with any terminal and I fail to
     find it...

     So I often try to get some help from a terminal dinosaur which
     master termcap or termios to

     make a more generic library.

     But nobody `HOME'...

     Note: I can do more with terminal Sequences as displaying a True
     Color image (RGB) into a terminal

     (xterm, terminals build with libvte-2.91 on GNU/Linux)

     But I must reduce the cursor to the minimum size

     for doing this but I can’t restore a normal cursor size...


     enjoy: So enjoy using ‘libaescprintf’ for ANSI art as I enjoy to
     write this little library.

* Menu:

* Compatibility:: 
* Note from the author:: 


File: libaescprintf.info,  Node: Compatibility,  Next: Note from the author,  Up: About libaescprintf

6.1 Compatibility
=================

     ‘libaescprintf’ was tested on as many terminals I could find into
     the repositories,

     sometimes some terminals either don’t blink or don’t accept `ANSI'
     escape sequences at all.

     But most of the time it works well.

     It works in most of the terminals: konsole as gnome-terminal and
     many others.

     But the old bug concern the background and the linefeed appears on
     some terminals:

     if you set the background color other than default and set an
     linefeed the entire line is

     background highlighted with the chosen color per example the
     Apple-Terminal do this one

     (but the blinking effect works well with it).


File: libaescprintf.info,  Node: Note from the author,  Prev: Compatibility,  Up: About libaescprintf

6.2 Note from the author
========================

     I don’t try to reinvent the wheel but simply provide this
     minimalist library

     in the following goals:

       1. At first to provide a lightweight library for only textual
          effect.

       2. To catch your attention so that someone can help me to make
          the library

          universal, using termcap (or termios).


File: libaescprintf.info,  Node: libaescprintf screen-shots,  Next: Indices and tables,  Prev: About libaescprintf,  Up: Top

7 libaescprintf screen-shots:
*****************************

* Menu:

* Matrix output:: 
* Text output:: 
* Flags output:: 


File: libaescprintf.info,  Node: Matrix output,  Next: Text output,  Up: libaescprintf screen-shots

7.1 Matrix output
=================

 [image src="libaescprintf_matrix_example_screenshot.png" ]


File: libaescprintf.info,  Node: Text output,  Next: Flags output,  Prev: Matrix output,  Up: libaescprintf screen-shots

7.2 Text output
===============

 [image src="libaescprintf_text_example_screenshot.png" ]


File: libaescprintf.info,  Node: Flags output,  Prev: Text output,  Up: libaescprintf screen-shots

7.3 Flags output
================

 [image src="libaescprintf_horizontal_flag_example_screenshot.png" ]

 [image src="libaescprintf_vertical_flag_example_screenshot.png" ]


File: libaescprintf.info,  Node: Indices and tables,  Next: Index,  Prev: libaescprintf screen-shots,  Up: Top

Indices and tables
******************

   * genindex

   * modindex

   * search


File: libaescprintf.info,  Node: Index,  Prev: Indices and tables,  Up: Top

Index
*****

 [index ]
* Menu:

* cbg_fprintf (C function):              File Color Background Print Format.
                                                                (line 6)
* cbg_printf (C function):               Color Background Print Format.
                                                                (line 6)
* cfgbg_fprintf (C function):            File Color Foreground Background Print Format.
                                                                (line 6)
* cfgbg_printf (C function):             Color Foreground Background Print Format.
                                                                (line 6)
* cfg_fprintf (C function):              File Color Foreground Print Format.
                                                                (line 6)
* cfg_printf (C function):               Color Foreground Print Format.
                                                                (line 6)
* scbg_printf (C function):              Styled Background Color Print Format.
                                                                (line 6)
* scbg_printf (C function) <1>:          Styled Background Color Print Format<2>.
                                                                (line 6)
* scfgbg_fprintf (C function):           File Styled Color Foreground Background Print Format.
                                                                (line 6)
* scfgbg_printf (C function):            Styled Color Foreground Background Print Format.
                                                                (line 6)
* scfg_fprintf (C function):             File Styled Foreground Color Print Format.
                                                                (line 6)
* scfg_printf (C function):              Styled Foreground Color Print Format.
                                                                (line 6)
* s_fprintf (C function):                File Styled Print Format.
                                                                (line 6)
* s_printf (C function):                 Styled Print Format.   (line 6)



Tag Table:
Node: Top370
Ref: index doc648
Ref: 0648
Node: libaescprintf ANSI Escape Sequence Color Print Format2716
Ref: libaescprintf doc2859
Ref: 12859
Ref: libaescprintf libaescprintf-ansi-escape-sequence-color-print-format2859
Ref: 22859
Ref: libaescprintf welcome-to-libaescprintf-s-documentation2859
Ref: 32859
Node: Introduction3260
Ref: libaescprintf introduction3391
Ref: 43391
Node: libaescprintf4127
Ref: libaescprintf libaescprintf4258
Ref: 74258
Node: Types of libaescprintf4872
Ref: Types_and_defines types-of-libaescprintf5036
Ref: 95036
Ref: Types_and_defines doc5036
Ref: a5036
Ref: Types_and_defines libaescprintf-color5164
Ref: 85164
Node: Styles7577
Ref: Types_and_defines styles7664
Ref: c7664
Ref: Types_and_defines libaescprintf-styles7664
Ref: d7664
Node: Colors7855
Ref: Types_and_defines colors7942
Ref: e7942
Node: Foreground colors values8035
Ref: Types_and_defines libaescprintf-fg-color8142
Ref: f8142
Ref: Types_and_defines foreground-colors-values8142
Ref: 108142
Node: Background colors values8618
Ref: Types_and_defines libaescprintf-bg-color8725
Ref: 118725
Ref: Types_and_defines background-colors-values8725
Ref: 128725
Node: Defines of libaescprintf9201
Ref: Types_and_defines defines-of-libaescprintf9347
Ref: 139347
Ref: Types_and_defines ansi-escape-sequences9402
Ref: 59402
Node: The styled colored printf functions11356
Ref: Functions the-styled-colored-printf-functions11516
Ref: 1411516
Ref: Functions doc11516
Ref: 1511516
Ref: Functions libaescprintf-functions11516
Ref: b11516
Node: Styled Print Format12145
Ref: Functions styled-print-format12281
Ref: 1612281
Ref: Functions c s_printf12332
Ref: 1712332
Node: Color Foreground Print Format12671
Ref: Functions color-foreground-print-format12845
Ref: 1812845
Ref: Functions c cfg_printf12916
Ref: 1912916
Node: Color Background Print Format13262
Ref: Functions color-background-print-format13453
Ref: 1a13453
Ref: Functions c cbg_printf13524
Ref: 1b13524
Node: Styled Foreground Color Print Format13883
Ref: Functions styled-foreground-color-print-format14081
Ref: 1c14081
Ref: Functions c scfg_printf14166
Ref: 1d14166
Node: Styled Background Color Print Format14610
Ref: Functions styled-background-color-print-format14819
Ref: 1e14819
Ref: Functions c scbg_printf14904
Ref: 1f14904
Node: Color Foreground Background Print Format15349
Ref: Functions color-foreground-background-print-format15569
Ref: 2015569
Ref: Functions c cfgbg_printf15662
Ref: 2115662
Node: Styled Color Foreground Background Print Format16116
Ref: Functions styled-color-foreground-background-print-format16291
Ref: 2216291
Ref: Functions c scfgbg_printf16398
Ref: 2316398
Node: The styled colored fprintf functions16937
Ref: Functions the-styled-colored-fprintf-functions17092
Ref: 2417092
Node: File Styled Print Format17784
Ref: Functions file-styled-print-format17931
Ref: 2517931
Ref: Functions c s_fprintf17992
Ref: 2617992
Node: File Color Foreground Print Format18398
Ref: Functions file-color-foreground-print-format18588
Ref: 2718588
Ref: Functions c cfg_fprintf18669
Ref: 2818669
Node: File Color Background Print Format19082
Ref: Functions file-color-background-print-format19289
Ref: 2919289
Ref: Functions c cbg_fprintf19370
Ref: 2a19370
Node: File Styled Foreground Color Print Format19786
Ref: Functions file-styled-foreground-color-print-format19998
Ref: 2b19998
Ref: Functions c scfg_fprintf20093
Ref: 2c20093
Node: Styled Background Color Print Format<2>20594
Ref: Functions id120817
Ref: 2d20817
Node: File Color Foreground Background Print Format21403
Ref: Functions file-color-foreground-background-print-format21637
Ref: 2e21637
Ref: Functions c cfgbg_fprintf21740
Ref: 2f21740
Node: File Styled Color Foreground Background Print Format22251
Ref: Functions file-styled-color-foreground-background-print-format22437
Ref: 3022437
Ref: Functions c scfgbg_fprintf22554
Ref: 3122554
Node: About libaescprintf23160
Ref: About_libaescprintf doc23306
Ref: 3223306
Ref: About_libaescprintf about-libaescprintf23306
Ref: 3323306
Node: Compatibility24183
Ref: About_libaescprintf compatibility24288
Ref: 3424288
Node: Note from the author25008
Ref: About_libaescprintf note-from-the-author25113
Ref: 3525113
Ref: About_libaescprintf libaescprintf-goal25164
Ref: 625164
Node: libaescprintf screen-shots25515
Ref: libaescprintf_example_screenshot doc25643
Ref: 3625643
Ref: libaescprintf_example_screenshot libaescprintf-screen-shots25643
Ref: 3725643
Node: Matrix output25768
Ref: libaescprintf_example_screenshot matrix-output25871
Ref: 3825871
Node: Text output25971
Ref: libaescprintf_example_screenshot text-output26095
Ref: 3926095
Node: Flags output26189
Ref: libaescprintf_example_screenshot flags-output26291
Ref: 3a26291
Node: Indices and tables26468
Ref: index indices-and-tables26582
Ref: 3b26582
Node: Index26664

End Tag Table


Local Variables:
coding: utf-8
End:
